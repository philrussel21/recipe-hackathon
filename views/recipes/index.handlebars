<div id="recipe-modal" class="hidden bg-opacity-50 bg-gray-800 w-full h-full absolute left-0 z-10 flex justify-center items-center">
    <div id="modal-card"class="p-2 z-20 w-6/12 h-76 bg-gray-800">
    <img id="close-modal" src="/icons/x.svg" alt="Close" class="cursor-pointer">
        <div class="w-full border-1">
        <a href="/" id="modal-title" class="text-3xl text-gray-100 w-full flex items-center"></a>
        <div class="border-2 w-full flex justify-between">
            <div class="flex" >
                <h3 class="text-gray-400 text-sm pr-4" id="modal-tags">tags</h3>
            </div>
            <div class="">
            <p class="text-gray-100 text-xl inline" id="modal-city" name="blah">,</p>
            <p class="inline text-xl text-gray-100" id="modal-country"></p>
            </div>
        </div>
            <span class="text-gray-600 inline">uploaded by </span><a class="text-gray-100 inline hover:text-gray-200" id="modal-username"></a>

    </div>

    </div>
</div>

<div
  class="h-full w-full flex flex-column justify-center items-center p-4 relative"
>
  <div class="w-24 h-24 absolute left-0 top-0 flex flex-col items-center pt-2">
    <a id="map-toggle" class="text-3xl p-4 text-gray-800 cursor-pointer">
      LIST</a
    >
  </div>
  <div id="map" class="z-0 h-full w-7/12 rounded-full"></div>
  <div id="list" class="hidden w-10/12 h-full p-4 overflow-y-auto">
    {{#each recipes}}
    <div class="hidden recipe-object">{{this}}</div>
    <div class="w-full h-32 border-1">
      <a href="/recipes/{{this.id}}" class="recipe-titles text-3xl text-gray-100 w-full flex items-center"
        >{{ this.title }}</a
      >
      <p class="hidden recipe-ids">{{this.id}}</p>
      <div class="border-2 w-full flex justify-between">
        <div class="flex">
          {{#each this.tags}}
          <h3 class="text-gray-400 text-sm pr-4 recipe-tags">#{{ this }}</h3>
          {{/each}}
        </div>
        <div class="">
          <p class="text-gray-100 text-xl city-name inline" name="blah">{{ this.city }},</p>
          <p class="inline text-xl text-gray-100 country-name">
            {{ this.country }}
          </p>
        </div>
      </div>
        <p class="recipe-user-emails hidden">{{this.user.email}}</p>
        <span class="text-gray-600 inline">uploaded by </span><a href="/users/{{this.user.email}}" class="text-gray-100 inline recipe-usernames"> {{ this.user.username }}</a>

    </div>
    {{/each}}
  </div>
  </div>
  <script>
    const mapToggle = document.getElementById("map-toggle");
    const mapDiv = document.getElementById("map");
    const listDiv = document.getElementById("list");

    mapToggle.addEventListener("click", () => {
      listDiv.classList.toggle("hidden");
      mapToggle.textContent === "MAP" ? mapToggle.textContent = "LIST" : mapToggle.textContent = "MAP"
      mapDiv.classList.toggle("hidden");
    });

    //MAP STUFF
    mapboxgl.accessToken =
      "pk.eyJ1IjoicmRya24iLCJhIjoiY2tnOWIxaXIyMGl5czJzcGNxdnNkZmxjZCJ9.6Scz8GZQu3i86D3AND8SJg";
    var map = new mapboxgl.Map({
      container: "map",
      style: "mapbox://styles/rdrkn/ckg9bhayn0w0h19mxot0fphd9",
      zoom: 1,
      maxZoom: 4,
      minZoom: 1,
    });

    const recipeObject = document.querySelectorAll('.recipe-object')
    const recipeCity = document.querySelectorAll(".city-name");
    const recipeCountry = document.querySelectorAll(".country-name");
    const recipeTitles = document.querySelectorAll(".recipe-titles")
    const recipeIds = document.querySelectorAll(".recipe-ids")
    const recipeTags = document.querySelectorAll('.recipe-tags')
    const recipeUsernames = document.querySelectorAll(".recipe-usernames")
    const recipeUserEmails = document.querySelectorAll(".recipe-user-emails")

    const recipeModal = document.getElementById('recipe-modal')
    const closeButton = document.getElementById('close-modal')
    const modalTitle = document.getElementById('modal-title')
    const modalTags = document.getElementById('modal-tags')
    const modalCard = document.getElementById('modal-card')
    const modalUsername = document.getElementById('modal-username')
    const modalCity = document.getElementById('modal-city')
    const modalCountry = document.getElementById('modal-country')

    recipeCity.forEach((node, index) => {
      let city = node.textContent;
      let country = recipeCountry[index].textContent;
      addMarker(city, country, index);
    });
    async function addMarker(city, country, index) {
      try {
      const { data } = await axios.get(
        `https://maps.googleapis.com/maps/api/geocode/json?address=${city}+${country}&key=AIzaSyCgqJcHOB-YQyrsN2T4fpGbAy29DJZY3Gc`
      );
      const { lat, lng } = data.results[0].geometry.location;
      let location = [lng, lat];

      const marker = new mapboxgl.Marker().setLngLat(location).addTo(map);

      let markerElement = marker.getElement()

        markerElement.addEventListener('mouseover', ()=> markerElement.style.cursor = "pointer")
        recipeModal.addEventListener('click',       ()=> recipeModal.classList.add('hidden'))
        closeButton.addEventListener('click',       ()=> recipeModal.classList.add('hidden'))

        markerElement.addEventListener('click', ()=>{ 
        recipeModal.classList.remove('hidden')
        modalTitle.textContent = recipeTitles[index].textContent
        modalTitle.href = "/recipes/"+recipeIds[index].textContent
        modalTags.textContent = recipeTags[index].textContent
        modalUsername.textContent = recipeUsernames[index].textContent
        modalUsername.href = "/users/"+recipeUserEmails[index].textContent
        modalCity.textContent = recipeCity[index].textContent
        modalCountry.textContent = recipeCountry[index].textContent
        })

        
    
      }
      catch(error) {
        console.log(error)
      }
    }



  </script>
</div>
